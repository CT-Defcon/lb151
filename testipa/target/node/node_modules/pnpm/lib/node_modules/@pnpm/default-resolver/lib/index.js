"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const error_1 = __importDefault(require("@pnpm/error"));
const git_resolver_1 = __importDefault(require("@pnpm/git-resolver"));
const local_resolver_1 = __importDefault(require("@pnpm/local-resolver"));
const npm_resolver_1 = __importDefault(require("@pnpm/npm-resolver"));
const tarball_resolver_1 = __importDefault(require("@pnpm/tarball-resolver"));
function createResolver(fetchFromRegistry, getCredentials, pnpmOpts) {
    const resolveFromNpm = npm_resolver_1.default(fetchFromRegistry, getCredentials, pnpmOpts);
    const resolveFromGit = git_resolver_1.default(pnpmOpts);
    return async (wantedDependency, opts) => {
        var _a, _b, _c, _d;
        const resolution = (_a = await resolveFromNpm(wantedDependency, opts)) !== null && _a !== void 0 ? _a : (wantedDependency.pref && ((_c = (_b = await tarball_resolver_1.default(wantedDependency)) !== null && _b !== void 0 ? _b : await resolveFromGit(wantedDependency)) !== null && _c !== void 0 ? _c : await local_resolver_1.default(wantedDependency, opts)));
        if (!resolution) {
            throw new error_1.default('SPEC_NOT_SUPPORTED_BY_ANY_RESOLVER', `${wantedDependency.alias ? wantedDependency.alias + '@' : ''}${(_d = wantedDependency.pref) !== null && _d !== void 0 ? _d : ''} isn't supported by any available resolver.`);
        }
        return resolution;
    };
}
exports.default = createResolver;
//# sourceMappingURL=index.js.map