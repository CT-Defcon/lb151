"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createResolver = void 0;
const default_resolver_1 = __importDefault(require("@pnpm/default-resolver"));
const fetch_1 = require("@pnpm/fetch");
const git_fetcher_1 = __importDefault(require("@pnpm/git-fetcher"));
const tarball_fetcher_1 = __importDefault(require("@pnpm/tarball-fetcher"));
const getCredentialsByURI = require("credentials-by-uri");
const mem = require("mem");
function default_1(opts) {
    const fetchFromRegistry = fetch_1.createFetchFromRegistry(opts);
    const getCredentials = mem((registry) => getCredentialsByURI(opts.authConfig, registry));
    return {
        fetchers: createFetchers(fetchFromRegistry, getCredentials, opts),
        resolve: default_resolver_1.default(fetchFromRegistry, getCredentials, opts),
    };
}
exports.default = default_1;
function createResolver(opts) {
    const fetchFromRegistry = fetch_1.createFetchFromRegistry(opts);
    const getCredentials = mem((registry) => getCredentialsByURI(opts.authConfig, registry));
    return default_resolver_1.default(fetchFromRegistry, getCredentials, opts);
}
exports.createResolver = createResolver;
function createFetchers(fetchFromRegistry, getCredentials, opts) {
    return {
        ...tarball_fetcher_1.default(fetchFromRegistry, getCredentials, opts),
        ...git_fetcher_1.default(),
    };
}
//# sourceMappingURL=index.js.map