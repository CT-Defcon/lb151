"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const operators_1 = require("rxjs/operators");
const outputConstants_1 = require("./outputConstants");
const prettyBytes = require("pretty-bytes");
const BIG_TARBALL_SIZE = 1024 * 1024 * 5; // 5 MB
exports.default = (log$) => {
    return log$.fetchingProgress.pipe(operators_1.filter((log) => log.status === 'started' &&
        typeof log.size === 'number' && log.size >= BIG_TARBALL_SIZE &&
        // When retrying the download, keep the existing progress line.
        // Fixing issue: https://github.com/pnpm/pnpm/issues/1013
        log.attempt === 1), operators_1.map((startedLog) => {
        const size = prettyBytes(startedLog['size']);
        return log$.fetchingProgress.pipe(operators_1.filter((log) => log.status === 'in_progress' && log.packageId === startedLog['packageId']), operators_1.map((log) => log['downloaded']), operators_1.startWith(0), operators_1.map((downloadedRaw) => {
            const done = startedLog['size'] === downloadedRaw;
            const downloaded = prettyBytes(downloadedRaw);
            return {
                fixed: !done,
                msg: `Downloading ${outputConstants_1.hlPkgId(startedLog['packageId'])}: ${outputConstants_1.hlValue(downloaded)}/${outputConstants_1.hlValue(size)}${done ? ', done' : ''}`,
            };
        }));
    }));
};
//# sourceMappingURL=reportBigTarballsProgress.js.map