"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const default_reporter_1 = __importDefault(require("@pnpm/default-reporter"));
const logger_1 = require("@pnpm/logger");
const silentReporter_1 = __importDefault(require("./silentReporter"));
exports.default = (reporterType, opts) => {
    switch (reporterType) {
        case 'default':
            default_reporter_1.default({
                context: {
                    argv: opts.cmd ? [opts.cmd] : [],
                    config: opts.config,
                },
                reportingOptions: {
                    appendOnly: false,
                    logLevel: opts.config.loglevel,
                    streamLifecycleOutput: opts.config.stream,
                    throttleProgress: 200,
                },
                streamParser: logger_1.streamParser,
            });
            return;
        case 'append-only':
            default_reporter_1.default({
                context: {
                    argv: opts.cmd ? [opts.cmd] : [],
                    config: opts.config,
                },
                reportingOptions: {
                    appendOnly: true,
                    logLevel: opts.config.loglevel,
                    throttleProgress: 1000,
                },
                streamParser: logger_1.streamParser,
            });
            return;
        case 'ndjson':
            logger_1.writeToConsole();
            return;
        case 'silent':
            silentReporter_1.default(logger_1.streamParser);
    }
};
